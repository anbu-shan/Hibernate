
public class User implements Comparable<User>{
private int id;
private String username;
private String password;

public int hashCode(){
	return 21 + username.hashCode() + Integer.hashCode(id);
}


public boolean equals(Object obj){
	if( !(obj instanceof User) )
	      return false;
	User another = (User) obj;
	return (this.hashCode() == another.hashCode());

}

public User() {
	super();
}


public User(int id, String username, String password) {
	super();
	this.id = id;
	this.username = username;
	this.password = password;
}


public int getId() {
	return id;
}
public void setId(int id) {
	this.id = id;
}
public String getUsername() {
	return username;
}
public void setUsername(String username) {
	this.username = username;
}
public String getPassword() {
	return password;
}
public void setPassword(String password) {
	this.password = password;
}


@Override
public String toString() {
	return "User [id=" + id + ", username=" + username + ", password=" + password + "]";
}


@Override
public int compareTo(User o) {
	return Integer.compare(o.id, this.id);
}


}





import java.util.HashSet;
import java.util.Set;
import java.util.TreeSet;

public class Solution {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Set<User> users = new TreeSet<User>();
		users.add(new User(1,"Steve","Jobs"));
		users.add(new User(1,"Steve","Jobs"));
		users.add(new User(2,"Steve","smith"));
		users.add(new User(3,"Michael","Jordan"));
		System.out.println(users);
	}

}
